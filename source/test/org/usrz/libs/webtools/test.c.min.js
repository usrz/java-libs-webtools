"use strict";function array_to_hash(a){for(var ret=Object.create(null),i=0;i<a.length;++i)ret[a[i]]=!0;return ret}function slice(a,start){return Array.prototype.slice.call(a,start||0)}function characters(str){return str.split("")}function member(name,array){for(var i=array.length;--i>=0;)if(array[i]==name)return!0;return!1}function find_if(func,array){for(var i=0,n=array.length;n>i;++i)if(func(array[i]))return array[i]}function repeat_string(str,i){if(0>=i)return"";if(1==i)return str;var d=repeat_string(str,i>>1);return d+=d,1&i&&(d+=str),d}function DefaultsError(msg,defs){Error.call(this,msg),this.msg=msg,this.defs=defs}function defaults(args,defs,croak){args===!0&&(args={});var ret=args||{};if(croak)for(var i in ret)ret.hasOwnProperty(i)&&!defs.hasOwnProperty(i)&&DefaultsError.croak("`"+i+"` is not a supported option",defs);for(var i in defs)defs.hasOwnProperty(i)&&(ret[i]=args&&args.hasOwnProperty(i)?args[i]:defs[i]);return ret}function merge(obj,ext){for(var i in ext)ext.hasOwnProperty(i)&&(obj[i]=ext[i]);return obj}function noop(){}function push_uniq(array,el){array.indexOf(el)<0&&array.push(el)}function string_template(text,props){return text.replace(/\{(.+?)\}/g,function(str,p){return props[p]})}function remove(array,el){for(var i=array.length;--i>=0;)array[i]===el&&array.splice(i,1)}function mergeSort(array,cmp){function merge(a,b){for(var r=[],ai=0,bi=0,i=0;ai<a.length&&bi<b.length;)r[i++]=cmp(a[ai],b[bi])<=0?a[ai++]:b[bi++];return ai<a.length&&r.push.apply(r,a.slice(ai)),bi<b.length&&r.push.apply(r,b.slice(bi)),r}function _ms(a){if(a.length<=1)return a;var m=Math.floor(a.length/2),left=a.slice(0,m),right=a.slice(m);return left=_ms(left),right=_ms(right),merge(left,right)}return array.length<2?array.slice():_ms(array)}function set_difference(a,b){return a.filter(function(el){return b.indexOf(el)<0})}function set_intersection(a,b){return a.filter(function(el){return b.indexOf(el)>=0})}function makePredicate(words){function compareTo(arr){if(1==arr.length)return f+="return str === "+JSON.stringify(arr[0])+";";f+="switch(str){";for(var i=0;i<arr.length;++i)f+="case "+JSON.stringify(arr[i])+":";f+="return true}return false;"}words instanceof Array||(words=words.split(" "));var f="",cats=[];out:for(var i=0;i<words.length;++i){for(var j=0;j<cats.length;++j)if(cats[j][0].length==words[i].length){cats[j].push(words[i]);continue out}cats.push([words[i]])}if(cats.length>3){cats.sort(function(a,b){return b.length-a.length}),f+="switch(str.length){";for(var i=0;i<cats.length;++i){var cat=cats[i];f+="case "+cat[0].length+":",compareTo(cat)}f+="}"}else compareTo(words);return new Function("str",f)}function all(array,predicate){for(var i=array.length;--i>=0;)if(!predicate(array[i]))return!1;return!0}function Dictionary(){this._values=Object.create(null),this._size=0}DefaultsError.prototype=Object.create(Error.prototype),DefaultsError.prototype.constructor=DefaultsError,DefaultsError.croak=function(msg,defs){throw new DefaultsError(msg,defs)};var MAP=function(){function MAP(a,f,backwards){function doit(){var val=f(a[i],i),is_last=val instanceof Last;return is_last&&(val=val.v),val instanceof AtTop?(val=val.v,val instanceof Splice?top.push.apply(top,backwards?val.v.slice().reverse():val.v):top.push(val)):val!==skip&&(val instanceof Splice?ret.push.apply(ret,backwards?val.v.slice().reverse():val.v):ret.push(val)),is_last}var i,ret=[],top=[];if(a instanceof Array)if(backwards){for(i=a.length;--i>=0&&!doit(););ret.reverse(),top.reverse()}else for(i=0;i<a.length&&!doit();++i);else for(i in a)if(a.hasOwnProperty(i)&&doit())break;return top.concat(ret)}function AtTop(val){this.v=val}function Splice(val){this.v=val}function Last(val){this.v=val}MAP.at_top=function(val){return new AtTop(val)},MAP.splice=function(val){return new Splice(val)},MAP.last=function(val){return new Last(val)};var skip=MAP.skip={};return MAP}();Dictionary.prototype={set:function(key,val){return this.has(key)||++this._size,this._values["$"+key]=val,this},add:function(key,val){return this.has(key)?this.get(key).push(val):this.set(key,[val]),this},get:function(key){return this._values["$"+key]},del:function(key){return this.has(key)&&(--this._size,delete this._values["$"+key]),this},has:function(key){return"$"+key in this._values},each:function(f){for(var i in this._values)f(this._values[i],i.substr(1))},size:function(){return this._size},map:function(f){var ret=[];for(var i in this._values)ret.push(f(this._values[i],i.substr(1)));return ret}};